#resources:
#  repositories:
#  - repository: terraform
#    type: github

pool:
  vmImage: "windows-2019"

stages:

  - stage: Download_Artifacts
    displayName: 'Download Artifacts'
    jobs:
    - job: downloadartifact
      displayName: 'Download'
      steps:

      - task: DownloadPipelineArtifact@2
        displayName: 'Download Reports'
        inputs:
          source: 'specific'
          project: 'AlphaTaxCloud'
          pipeline: 231
          artifactName: 'Reports'
          runVersion: 'latest'
          targetPath: '$(Pipeline.Workspace)\Reports'

      - task: DownloadPipelineArtifact@2
        displayName: 'Download DacPac'
        inputs:
          source: 'specific'
          project: 'AlphaTaxCloud'
          pipeline: 240
          artifactName: 'alphact-customerdb-dacpac'
          runVersion: 'latest'
          targetPath: '$(Pipeline.Workspace)\DacPac'

      - task: DownloadPackage@1
        displayName: 'Download Module'
        inputs:
          packageType: 'nuget'
          feed: '/311f6f04-c06e-4389-a94b-bfe025084382'
          view: 'Release'
          definition: 'TSPipelineTasks'
          version: $(psmoduleVersion)
          extract: false
          downloadPath: '$(Pipeline.Workspace)\TSPipelineTasks'

      - task: PublishPipelineArtifact@1
        displayName: 'Publish Files for use later'
        inputs:
          targetPath: '$(Pipeline.Workspace)'
          artifact: 'Files'
          publishLocation: 'pipeline'

  - stage: Dev_Provision_Tenant
    displayName: 'Dev-Alphatax360 - Provision Tenant'
    dependsOn: Download_Artifacts
    variables:
    - group: "PowerBi Specifics"
    - group: "dev-rnd-ukw-sqls-VarGroup"
    - group: "Alphatax360 dev Cloud Specifics"

    jobs:
      - deployment: devtenantcreate
        displayName: 'Dev-Alphatax360 - Tenant Creation'
        environment: Dev-Alphatax360
        strategy: 
            runOnce:
                deploy:
                  steps:
                    - template: templates/provisioning.yaml

